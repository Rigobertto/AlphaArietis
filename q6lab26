#include <iostream> 
using namespace std;

const int TAM_NOME = 30;
struct aluno { 
	char nome[TAM_NOME]; 
	int nivel; };
// solicita e armazena informações de alunos: 
// - encerrando ao preencher o vetor ou quando o usuário 
// entrar com uma linha em branco para o nome do aluno 
// - a função retorna o número de alunos lidos 
int PegarInfo(aluno va[], int n);

// mostra o conteúdo de um registro aluno
void Mostrar1(aluno a);

// mostra o conteúdo do registro aluno apontado 
void Mostrar2(const aluno * pa);

// mostra o conteúdo do vetor de alunos 
void Mostrar3(const aluno va[], int n);

int main() {
	cout << "Tamanho da classe: "; 
	int tam; 
	cin >> tam;
	// remove \n para uso do cin.getline cin.ignore();
	aluno* ptr = new aluno[tam];

	int inscritos = PegarInfo(ptr, tam); 
	cout << endl;

	for (int i = 0; i < inscritos; ++i)
	{ 
		Mostrar1(ptr[i]);
		Mostrar2(&ptr[i]); 
	} 
	cout << endl;
	Mostrar3(ptr, inscritos); 
	delete[] ptr; 
	cout << "Feito!\n";
	return 0;
}
int PegarInfo(aluno va[], int n){
	int cont = 0;
	for (int i = 0; i < n; i++)
	{
		cout << "Nome do " << i+1 << "° aluno: ";
		cin >> va[i].nome;
		cout << "Nível do " << i+1 << "° aluno: ";
		cin >> va[i].nivel;
		cont++;
	}
	return cont;
}
void Mostrar1(aluno a) {
	cout << "Nome: " << a.nome << endl;
	cout << "Nível: " << a.nivel << endl;
	cout << endl;
}
void Mostrar2(const aluno* pa) {
	cout << "Nome: " << pa->nome << endl;
	cout << "Nível: " << pa->nivel << endl;
	cout << endl;
}
void Mostrar3(const aluno va[], int n) {
	for (int i = 0; i < n; i++)
	{
		cout << "Nome do " << i+1 << "° aluno: " << va[i].nome << endl;
		cout << "Nível do " << i+1 << "° aluno: " << va[i].nivel << endl;
		cout << endl;
	}
}
